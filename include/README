
This directory is intended for project header files.

A header file is a file containing C declarations and macro definitions
to be shared between several project source files. You request the use of a
header file in your project source file (C, C++, etc) located in `src` folder
by including it, with the C preprocessing directive `#include'.

```src/main.c

#include "header.h"

int main (void)
{
 ...
}
```

Including a header file produces the same results as copying the header file
into each source file that needs it. Such copying would be time-consuming
and error-prone. With a header file, the related declarations appear
in only one place. If they need to be changed, they can be changed in one
place, and programs that include the header file will automatically use the
new version when next recompiled. The header file eliminates the labor of
finding and changing all the copies as well as the risk that a failure to
find one copy will result in inconsistencies within a program.

In C, the usual convention is to give header files names that end with `.h'.
It is most portable to use only letters, digits, dashes, and underscores in
header file names, and at most one dot.

Read more about using header files in official GCC documentation:

* Include Syntax
* Include Operation
* Once-Only Headers
* Computed Includes

https://gcc.gnu.org/onlinedocs/cpp/Header-Files.html

// Comment out this line when NOT using an ARDUINO NANO 33 BLE!
#define USING_NANO_33_BLE
#define NANO_33_BLE_DELAY 5


THERE IS A PROBLEM WITH THE ADAFRUIT PN532 LIBRARY. THE FIX IS AS SHOWN BELOW:

// Comment out this line when NOT using an ARDUINO NANO 33 BLE!
#define USING_NANO_33_BLE
#define NANO_33_BLE_DELAY 5

STARTING AT LINE 312:
/**************************************************************************/
/*!
    @brief  Sends a command and waits a specified period for the ACK

    @param  cmd       Pointer to the command buffer
    @param  cmdlen    The size of the command in bytes
    @param  timeout   timeout before giving up

    @returns  1 if everything is OK, 0 if timeout occured before an
              ACK was recieved
*/
/**************************************************************************/
// default timeout of one second
bool Adafruit_PN532::sendCommandCheckAck(uint8_t *cmd, uint8_t cmdlen,
                                         uint16_t timeout)
{
  // uint16_t timer = 0;

  // write the command
  writecommand(cmd, cmdlen);

  // Wait for chip to say its ready!
  if (!waitready(timeout))
  {
    return false;
  }

#ifdef PN532DEBUG
  if (spi_dev == NULL)
  {
    PN532DEBUGPRINT.println(F("IRQ received"));
  }
#endif

  // read acknowledgement
  if (!readack())
  {
#ifdef PN532DEBUG
    PN532DEBUGPRINT.println(F("No ACK frame received!"));
#endif
    return false;
  }

  // For SPI only wait for the chip to be ready again.
  // This is unnecessary with I2C.
  if (spi_dev != NULL)
  {
#ifdef USING_NANO_33_BLE
    delay(NANO_33_BLE_DELAY);
#endif
    if (!waitready(timeout))
    {
#ifdef USING_NANO_33_BLE
      delay(NANO_33_BLE_DELAY);
#endif
      return false;
    }
  }

  return true; // ack'd command
}
